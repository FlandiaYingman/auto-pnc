package top.anagke.auto_pnc.explore

import top.anagke.auto_android.device.*
import top.anagke.auto_android.device.TableSelector.ConstraintType.HORIZONTAL
import top.anagke.auto_android.device.TableSelector.ConstraintType.VERTICAL
import top.anagke.auto_android.img.Pos
import top.anagke.auto_android.util.Size
import top.anagke.auto_pnc.tmpl

object Vulnerability {

    private val 漏洞排查_关卡选择界面 by tmpl()
    private val 漏洞排查_开始战斗 by tmpl()
    private val 漏洞排查_作战结束 by tmpl()
    private val 漏洞排查_已完成 by tmpl()

    private val 关卡选择器 = TableSelector(
        Pos(155, 313),
        Pos(1042, 313),
        Size(450, 0),
        Size(450, 0),
        3, 1,
        7, 1,
        VERTICAL
    )
    private val 函数选择器 = TableSelector(
        Pos(622, 330),
        Pos(1106, 556),
        Size(484, 202),
        Size(0, 210),
        2, 2,
        2, 9,
        HORIZONTAL,
    )

    @JvmStatic
    fun main(args: Array<String>) {
        Device().apply {
            operate漏洞排查(3, listOf())
        }
    }

    enum class Level {
        谬误深渊, 失真虚境,
    }

    fun Device.run(level: Level, plan: List<List<Int>>) {
        enter漏洞排查(level)
        关卡选择器.copy().apply { resetTable().nap() }
        if (match(漏洞排查_已完成)) {
            return
        }
        repeat(7) {
            operate漏洞排查(it, plan[it])
        }
    }

    fun Device.enter漏洞排查(level: Level) {
        when (level) {
            Level.谬误深渊 -> tap(735, 210, desc = "点击谬误深渊").nap()
            Level.失真虚境 -> tap(1036, 366, desc = "点击失真虚境").nap()
        }
        await(漏洞排查_关卡选择界面)
    }

    fun Device.operate漏洞排查(levelNum: Int, functionNums: List<Int>) {
        关卡选择器.copy().apply {
            resetTable().nap()
            if (levelNum == 0) {
                tapItem(fromSeqNum(levelNum)).nap()
                tap(950, 518, desc = "确认提示框").sleep()
            } else {
                tapItem(fromSeqNum(levelNum)).sleep()
            }
        }
        await(漏洞排查_开始战斗)
        tap(1012, 59, desc = "装备函数连锁").nap()

        函数选择器.copy().apply {
            functionNums.forEach { tapItem(fromSeqNum(it)) }
        }
        tap(1043, 616, desc = "确认选择").nap()
        tap(1049, 658, desc = "开始战斗").nap()
        await(漏洞排查_作战结束)
        sleep()
        tap(799, 643, desc = "返回").sleep()
        await(漏洞排查_关卡选择界面)
    }

}